services:

  # https://medium.com/workleap/the-only-local-mongodb-replica-set-with-docker-compose-guide-youll-ever-need-2f0b74dd8384

  mongodb1:
    image: docker.io/mongodb/mongodb-community-server:latest
    hostname: mongodb1
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

  mongodb_exporter:
    image: docker.io/percona/mongodb_exporter:0.43
    command: ["--mongodb.uri=mongodb1://127.0.0.1:27017"]
    ports:
     - 9216:9216
    depends_on:
      - mongodb1
  
  prometheus:
    extra_hosts:
      - "host.docker.internal:host-gateway"
      #- "host.docker.internal:172.17.0.1"
    image: prom/prometheus:v2.37.9
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - 19090:9090
    user: "0:0"
    volumes:
      - ./config:/etc/prometheus:ro
    restart: unless-stopped
    depends_on:
      - mongodb_exporter

  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - '13000:3000'
    user: "0:0"
    volumes:
      - ./config:/etc/grafanax:ro
      - ./config:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - prometheus


